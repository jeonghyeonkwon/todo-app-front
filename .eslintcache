[{"D:\\포트폴리오\\front-end\\src\\containers\\BoardDetailContainer.jsx":"1","D:\\포트폴리오\\front-end\\src\\containers\\user\\LoginContainer.jsx":"2","D:\\포트폴리오\\front-end\\src\\components\\main\\BoardDetail.jsx":"3","D:\\포트폴리오\\front-end\\src\\components\\main\\Board.jsx":"4","D:\\포트폴리오\\front-end\\src\\index.js":"5","D:\\포트폴리오\\front-end\\src\\containers\\todo\\TodoContainer.jsx":"6","D:\\포트폴리오\\front-end\\src\\containers\\study\\StudyWriteContainer.jsx":"7","D:\\포트폴리오\\front-end\\src\\containers\\qna\\QnaWriteContainer.jsx":"8","D:\\포트폴리오\\front-end\\src\\containers\\qna\\QnaBoardContainer.jsx":"9","D:\\포트폴리오\\front-end\\src\\containers\\HomeContainer.jsx":"10","D:\\포트폴리오\\front-end\\src\\containers\\study\\StudyBoardContainer.jsx":"11","D:\\포트폴리오\\front-end\\src\\modules\\loading.js":"12","D:\\포트폴리오\\front-end\\src\\modules\\auth.js":"13","D:\\포트폴리오\\front-end\\src\\lib\\api\\client.js":"14","D:\\포트폴리오\\front-end\\src\\components\\main\\Kinds.jsx":"15","D:\\포트폴리오\\front-end\\src\\components\\section\\Footer.jsx":"16","D:\\포트폴리오\\front-end\\src\\components\\common\\Loading.jsx":"17","D:\\포트폴리오\\front-end\\src\\components\\section\\Side.jsx":"18","D:\\포트폴리오\\front-end\\src\\components\\main\\Login.jsx":"19","D:\\포트폴리오\\front-end\\src\\components\\main\\RankView.jsx":"20","D:\\포트폴리오\\front-end\\src\\containers\\user\\MyInfoContainer.jsx":"21","D:\\포트폴리오\\front-end\\src\\modules\\user.js":"22","D:\\포트폴리오\\front-end\\src\\components\\main\\MyInfo.jsx":"23","D:\\포트폴리오\\front-end\\src\\components\\common\\StyledCard.jsx":"24","D:\\포트폴리오\\front-end\\src\\components\\main\\CommentList.jsx":"25","D:\\포트폴리오\\front-end\\src\\components\\main\\BoardView.jsx":"26","D:\\포트폴리오\\front-end\\src\\components\\common\\Kind.jsx":"27","D:\\포트폴리오\\front-end\\src\\App.js":"28","D:\\포트폴리오\\front-end\\src\\containers\\BoardIntroContainer.jsx":"29","D:\\포트폴리오\\front-end\\src\\components\\section\\Header.jsx":"30","D:\\포트폴리오\\front-end\\src\\components\\main\\MyTodo.jsx":"31","D:\\포트폴리오\\front-end\\src\\components\\main\\CreateBoard.jsx":"32","D:\\포트폴리오\\front-end\\src\\modules\\index.js":"33","D:\\포트폴리오\\front-end\\src\\components\\main\\SignUp.jsx":"34","D:\\포트폴리오\\front-end\\src\\components\\main\\LocalList.jsx":"35","D:\\포트폴리오\\front-end\\src\\components\\common\\StyledModal.jsx":"36"},{"size":872,"mtime":1619706080526,"results":"37","hashOfConfig":"38"},{"size":177,"mtime":1617297814892,"results":"39","hashOfConfig":"38"},{"size":8683,"mtime":1620556332839,"results":"40","hashOfConfig":"38"},{"size":7391,"mtime":1619706068828,"results":"41","hashOfConfig":"38"},{"size":1390,"mtime":1616222223866,"results":"42","hashOfConfig":"38"},{"size":179,"mtime":1617297814093,"results":"43","hashOfConfig":"38"},{"size":222,"mtime":1617897767600,"results":"44","hashOfConfig":"38"},{"size":216,"mtime":1617897766679,"results":"45","hashOfConfig":"38"},{"size":710,"mtime":1619706071987,"results":"46","hashOfConfig":"38"},{"size":1830,"mtime":1619194991782,"results":"47","hashOfConfig":"38"},{"size":812,"mtime":1618565080038,"results":"48","hashOfConfig":"38"},{"size":726,"mtime":1617297823994,"results":"49","hashOfConfig":"38"},{"size":1008,"mtime":1617297822890,"results":"50","hashOfConfig":"38"},{"size":196,"mtime":1617297820525,"results":"51","hashOfConfig":"38"},{"size":483,"mtime":1619710932720,"results":"52","hashOfConfig":"38"},{"size":1376,"mtime":1617297809997,"results":"53","hashOfConfig":"38"},{"size":1365,"mtime":1617297799635,"results":"54","hashOfConfig":"38"},{"size":2516,"mtime":1619497941099,"results":"55","hashOfConfig":"38"},{"size":3793,"mtime":1617297808071,"results":"56","hashOfConfig":"38"},{"size":2498,"mtime":1619180431776,"results":"57","hashOfConfig":"38"},{"size":183,"mtime":1617956200875,"results":"58","hashOfConfig":"38"},{"size":1906,"mtime":1617297824626,"results":"59","hashOfConfig":"38"},{"size":13416,"mtime":1618405005032,"results":"60","hashOfConfig":"38"},{"size":2914,"mtime":1617529253202,"results":"61","hashOfConfig":"38"},{"size":3053,"mtime":1619706492218,"results":"62","hashOfConfig":"38"},{"size":4739,"mtime":1619706354078,"results":"63","hashOfConfig":"38"},{"size":2305,"mtime":1619710203309,"results":"64","hashOfConfig":"38"},{"size":1902,"mtime":1619710502363,"results":"65","hashOfConfig":"38"},{"size":318,"mtime":1619710400729,"results":"66","hashOfConfig":"38"},{"size":5832,"mtime":1620550569862,"results":"67","hashOfConfig":"38"},{"size":7969,"mtime":1620555523926,"results":"68","hashOfConfig":"38"},{"size":5874,"mtime":1618475476120,"results":"69","hashOfConfig":"38"},{"size":372,"mtime":1617297823436,"results":"70","hashOfConfig":"38"},{"size":7777,"mtime":1617297809062,"results":"71","hashOfConfig":"38"},{"size":1341,"mtime":1618465682952,"results":"72","hashOfConfig":"38"},{"size":7789,"mtime":1620555434933,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"m14v9n",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\포트폴리오\\front-end\\src\\containers\\BoardDetailContainer.jsx",["161"],"import React, { useEffect } from 'react';\r\nimport BoardDetail from '../components/main/BoardDetail';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CommentList from '../components/main/CommentList';\r\nimport styled from 'styled-components';\r\nconst BoardDetailStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  flex: 4;\r\n\r\n  /* height: 800px; */\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #fff;\r\n`;\r\nconst BoardDetailContainer = ({ location }) => {\r\n  const section = location.pathname.split('/')[1];\r\n  const boardId = location.pathname.split('/')[3];\r\n  return (\r\n    <BoardDetailStyled>\r\n      <BoardDetail section={section}></BoardDetail>\r\n      <CommentList section={section} boardId={boardId}></CommentList>\r\n    </BoardDetailStyled>\r\n  );\r\n};\r\n\r\nexport default withRouter(BoardDetailContainer);\r\n","D:\\포트폴리오\\front-end\\src\\containers\\user\\LoginContainer.jsx",[],["162","163"],"D:\\포트폴리오\\front-end\\src\\components\\main\\BoardDetail.jsx",["164","165","166","167","168"],"D:\\포트폴리오\\front-end\\src\\components\\main\\Board.jsx",["169"],"D:\\포트폴리오\\front-end\\src\\index.js",[],["170","171"],"D:\\포트폴리오\\front-end\\src\\containers\\todo\\TodoContainer.jsx",[],["172","173"],"D:\\포트폴리오\\front-end\\src\\containers\\study\\StudyWriteContainer.jsx",[],"D:\\포트폴리오\\front-end\\src\\containers\\qna\\QnaWriteContainer.jsx",[],["174","175"],"D:\\포트폴리오\\front-end\\src\\containers\\qna\\QnaBoardContainer.jsx",[],"D:\\포트폴리오\\front-end\\src\\containers\\HomeContainer.jsx",["176","177"],"import { Skeleton } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Loading from '../components/common/Loading';\r\nimport BoardView from '../components/main/BoardView';\r\nimport RankView from '../components/main/RankView';\r\nconst Form = styled.div`\r\n  width: 100%;\r\n`;\r\nconst Title = styled.div``;\r\n\r\nconst HomeComponent = styled.div`\r\n  flex: 4;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #fff;\r\n  padding: 25px;\r\n`;\r\nconst HomeContainer = () => {\r\n  const [form, setForm] = useState({\r\n    study: [],\r\n    qna: [],\r\n    rank: [],\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/home');\r\n        setForm(response.data);\r\n        console.log(response);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log('form');\r\n    console.log(form);\r\n  }, form);\r\n  return (\r\n    <HomeComponent>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <Form>\r\n            <Title>\r\n              <h1>SKILL RANK</h1>\r\n            </Title>\r\n            {form.rank ? (\r\n              <RankView rank={form.rank} />\r\n            ) : (\r\n              <Skeleton variant=\"rect\" width={210} />\r\n            )}\r\n          </Form>\r\n          <Form>\r\n            <Title>\r\n              <h1>게시판</h1>\r\n            </Title>\r\n            <BoardView qna={form.qna} study={form.study} />\r\n          </Form>\r\n        </>\r\n      )}\r\n    </HomeComponent>\r\n  );\r\n};\r\n\r\nexport default HomeContainer;\r\n",["178","179"],"D:\\포트폴리오\\front-end\\src\\containers\\study\\StudyBoardContainer.jsx",[],"D:\\포트폴리오\\front-end\\src\\modules\\loading.js",[],["180","181"],"D:\\포트폴리오\\front-end\\src\\modules\\auth.js",["182"],"import { createAction, handleActions } from 'redux-actions';\r\n\r\nimport producer from 'immer';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\r\n\r\nimport * as authApi from '../lib/api/auth'\r\n\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\r\nconst initialState = {\r\n\r\n    auth: {\r\n        token: null,\r\n\r\n    },\r\n    authError: null,\r\n}\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n    username, password\r\n}));\r\nconst loginSaga = createRequestSaga(LOGIN, authApi.login);\r\n\r\nexport function* authSaga() {\r\n    yield takeLatest(LOGIN, loginSaga);\r\n}\r\nconst auth = handleActions({\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n        ...state,\r\n        authError: null,\r\n        auth\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n        ...state,\r\n        authError: error,\r\n    })\r\n}, initialState)\r\n\r\nexport default auth;","D:\\포트폴리오\\front-end\\src\\lib\\api\\client.js",[],"D:\\포트폴리오\\front-end\\src\\components\\main\\Kinds.jsx",[],"D:\\포트폴리오\\front-end\\src\\components\\section\\Footer.jsx",["183"],"D:\\포트폴리오\\front-end\\src\\components\\common\\Loading.jsx",[],"D:\\포트폴리오\\front-end\\src\\components\\section\\Side.jsx",[],"D:\\포트폴리오\\front-end\\src\\components\\main\\Login.jsx",["184","185"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../modules/auth';\r\nimport { check } from '../../modules/user';\r\nconst Support = styled.div`\r\n  margin-top: 30px;\r\n  label,\r\n  a {\r\n    font-size: 14px;\r\n    display: block;\r\n  }\r\n\r\n  a {\r\n    margin-top: 5px;\r\n    text-align: right;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      color: dodgerblue;\r\n    }\r\n  }\r\n  span {\r\n    /* visibility: hidden; */\r\n    display: block;\r\n    margin-top: 40px;\r\n    text-align: center;\r\n    color: crimson;\r\n  }\r\n`;\r\nconst BtnGroup = styled.div`\r\n  margin-top: 40px;\r\n  button {\r\n    display: block;\r\n    width: 100%;\r\n    margin: 10px 5px 10px 0px;\r\n    outline: none;\r\n    font-size: 20px;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    &[type='submit'] {\r\n      background: rgb(205, 224, 246);\r\n    }\r\n  }\r\n`;\r\nconst Field = styled.div`\r\n  label {\r\n    display: block;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  input {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    font-size: 20px;\r\n    transition: 0.5s;\r\n    &:focus {\r\n      outline-color: dodgerblue;\r\n    }\r\n  }\r\n`;\r\nconst LoginForm = styled.form`\r\n  width: 350px;\r\n  height: 600px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid gray;\r\n  box-shadow: 5px 5px 10px rgb(0, 0, 0, 0.3);\r\n`;\r\nconst LoginComponent = styled.div`\r\n  flex: 4;\r\n  height: 800px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #fff;\r\n`;\r\nconst Login = ({ history }) => {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const dispatch = useDispatch();\r\n\r\n  const { token, authError } = useSelector(({ auth }) => ({\r\n    token: auth.auth.token,\r\n\r\n    authError: auth.authError,\r\n  }));\r\n  useEffect(() => {\r\n    //console.log(token);\r\n    if (token) {\r\n      //console.log(`token : ${token}`);\r\n      try {\r\n        localStorage.setItem('jwttoken', JSON.stringify(token));\r\n        dispatch(check(token));\r\n      } catch (e) {\r\n        console.log('localStorage 작동을 하지 않습니다.');\r\n      } finally {\r\n        history.push('/');\r\n      }\r\n    }\r\n    if (authError) {\r\n      //console.log(`authError : ${authError} `);\r\n      alert('로그인에 실패하였습니다. 다시 확인해 주세요.');\r\n      window.location.reload();\r\n    }\r\n  }, [token, authError]);\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password }));\r\n  };\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  };\r\n  return (\r\n    <LoginComponent>\r\n      <LoginForm>\r\n        <h1>로그인</h1>\r\n        <Field>\r\n          <label>아이디</label>\r\n          <input\r\n            type=\"text\"\r\n            value={form.username}\r\n            name=\"username\"\r\n            onChange={onChange}\r\n          ></input>\r\n        </Field>\r\n        <Field>\r\n          <label>비밀번호</label>\r\n          <input\r\n            type=\"password\"\r\n            value={form.password}\r\n            name=\"password\"\r\n            onChange={onChange}\r\n          ></input>\r\n        </Field>\r\n        <Support>\r\n          <label>회원가입 정보가 기억나지 않나요???</label>\r\n          <a>아이디/비밀번호 찾기</a>\r\n        </Support>\r\n        <BtnGroup>\r\n          <button type=\"submit\" onClick={loginHandler}>\r\n            로그인\r\n          </button>\r\n          <button type=\"button\">회원가입</button>\r\n        </BtnGroup>\r\n      </LoginForm>\r\n    </LoginComponent>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","D:\\포트폴리오\\front-end\\src\\components\\main\\RankView.jsx",["186","187"],"D:\\포트폴리오\\front-end\\src\\containers\\user\\MyInfoContainer.jsx",[],"D:\\포트폴리오\\front-end\\src\\modules\\user.js",["188","189"],"import { createAction, handleActions } from 'redux-actions';\r\n\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\n\r\nimport * as authAPI from '../lib/api/auth'\r\n\r\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga'\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\r\n\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\n\r\nexport const check = createAction(CHECK, token => token);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n    try {\r\n        localStorage.removeItem('jwttoken');\r\n        console.log('토큰이 지워졌습니다.')\r\n    } catch (e) {\r\n        console.log('localStorage가 작동 하지 않습니다');\r\n    }\r\n}\r\nfunction logoutSaga() {\r\n    try {\r\n\r\n        localStorage.removeItem('jwttoken');\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield takeLatest(CHECK, checkSaga);\r\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n    yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n    account: {\r\n        accountId: null,\r\n        accountName: null,\r\n    },\r\n    checkError: null,\r\n}\r\nexport default handleActions(\r\n    {\r\n        [CHECK_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            account: action.payload,\r\n            checkError: null,\r\n        }),\r\n        [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n            ...state,\r\n            account: {\r\n                accountId: null,\r\n                accountName: null\r\n            },\r\n            checkError: error,\r\n        }),\r\n        [LOGOUT]: state => ({\r\n            ...state,\r\n            account: {\r\n                accountId: null,\r\n                accountName: null\r\n            },\r\n        }),\r\n    }, initialState\r\n)","D:\\포트폴리오\\front-end\\src\\components\\main\\MyInfo.jsx",["190","191","192","193","194","195","196","197"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Button,\r\n  TextField,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n} from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport Loading from '../common/Loading';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '70%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    fontWeight: 'bold',\r\n    fontSize: '24px',\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  withdrawal: {\r\n    color: 'red',\r\n  },\r\n  textField: {\r\n    margin: '5px 0px 10px 0px',\r\n    width: '30%',\r\n  },\r\n  detail: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'left',\r\n  },\r\n  button: {\r\n    width: '20%',\r\n    margin: 'auto',\r\n  },\r\n  formControl: {\r\n    margin: '5px 0px 10px 0px',\r\n    width: '30%',\r\n  },\r\n}));\r\n\r\nconst MyInfoComponent = styled.div`\r\n  padding: 20px;\r\n  flex: 4;\r\n  height: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #fff;\r\n`;\r\nconst MyInfo = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [form, setForm] = useState({\r\n    currentPw: '',\r\n    newPw: '',\r\n    reNewPw: '',\r\n    name: '',\r\n    responseData: [],\r\n    local: '',\r\n    withDrawalPw: '',\r\n  });\r\n  const [account, setAccount] = useState({\r\n    id: 0,\r\n    accountId: '',\r\n    location: '',\r\n    name: '',\r\n  });\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const onClickUpdate = async (event, updateName) => {\r\n    event.preventDefault();\r\n\r\n    const { currentPw, newPw, reNewPw, name, local } = form;\r\n    switch (updateName) {\r\n      case 'password':\r\n        if (!currentPw || !newPw || !reNewPw) {\r\n          alert('빈 공간을 채워주세요');\r\n          return;\r\n        }\r\n        if (newPw !== reNewPw) {\r\n          alert('새로운 비밀번호와 새로운 비밀번호가 일치하지 않습니다.');\r\n          return;\r\n        }\r\n        break;\r\n      case 'name':\r\n        if (!name) {\r\n          alert('빈 공간을 채워주세요');\r\n          return;\r\n        }\r\n        break;\r\n      case 'local':\r\n        if (!local) {\r\n          alert('지역을 채워주세요');\r\n          return;\r\n        }\r\n        break;\r\n    }\r\n    const updateUser = (token) =>\r\n      axios.patch(\r\n        `http://localhost:8080/api/myinfo/${account.id}?update=${updateName}`,\r\n        form,\r\n        {\r\n          headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n            Authorization: `Bearer ${token.replace(/\\\"/gi, '')}`,\r\n          },\r\n        },\r\n      );\r\n    try {\r\n      const token = localStorage.getItem('jwttoken');\r\n      console.log(`token ${token}`);\r\n      await updateUser(token)\r\n        .then((res) => {\r\n          if (res.status === 204) {\r\n            alert('회원 정보 수정에 완료하였습니다.');\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert('내용에 문제가 있습니다. 다시 시도 해주세요');\r\n      //history.push('/');\r\n    } finally {\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const deleteUser = async (e) => {\r\n    e.preventDefault();\r\n    const { withDrawalPw } = form;\r\n    if (!withDrawalPw) {\r\n      alert('내용을 채워주세요.');\r\n      return;\r\n    }\r\n    const deleteUser = (token) =>\r\n      axios.delete(`http://localhost:8080/api/myinfo/${account.id}`, {\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n          Authorization: `Bearer ${token.replace(/\\\"/gi, '')}`,\r\n        },\r\n        data: { withDrawalPw },\r\n        withCredentials: true,\r\n      });\r\n\r\n    try {\r\n      const token = localStorage.getItem('jwttoken');\r\n      console.log(`token ${token}`);\r\n      await deleteUser(token)\r\n        .then((res) => {\r\n          if (res.status === 204) {\r\n            alert('회원 탈퇴를 완료하였습니다. 감사합니다.');\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    } catch (e) {\r\n      console.log('2');\r\n\r\n      alert('내용에 문제가 있습니다. 다시 시도 해주세요');\r\n      //history.push('/');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setForm({\r\n      ...form,\r\n      currentPw: '',\r\n      newPw: '',\r\n      reNewPw: '',\r\n      name: '',\r\n      local: '',\r\n      withDrawalPw: '',\r\n    });\r\n  }, [expanded]);\r\n  const handleChangeForm = (e) => {\r\n    const { value, name } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n  useEffect(() => {\r\n    const fetchLocal = async (token) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/myinfo`, {\r\n          headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n            Authorization: `Bearer ${token.replace(/\\\"/gi, '')}`,\r\n          },\r\n        });\r\n        console.log(response);\r\n        setForm({ ...form, responseData: response.data.local });\r\n        setAccount(response.data.account);\r\n      } catch (e) {\r\n        console.log(`${e} 함수 안`);\r\n        alert(e);\r\n        //alert('내용에 문제가 있습니다. 다시 시도 해주세요');\r\n        //history.push('/');\r\n      }\r\n      setLoading(false);\r\n    };\r\n    try {\r\n      const token = localStorage.getItem('jwttoken');\r\n      console.log(`token ${token}`);\r\n      fetchLocal(token);\r\n    } catch (e) {\r\n      console.log('2');\r\n\r\n      alert('내용에 문제가 있습니다. 다시 시도 해주세요');\r\n      //history.push('/');\r\n    }\r\n  }, []);\r\n  return (\r\n    <MyInfoComponent>\r\n      {loading && account.id ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className={classes.root}>\r\n          <Accordion\r\n            expanded={expanded === 'panel1'}\r\n            onChange={handleChange('panel1')}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1bh-content\"\r\n              id=\"panel1bh-header\"\r\n            >\r\n              <Typography className={classes.heading}>아이디</Typography>\r\n              <Typography className={classes.secondaryHeading}>\r\n                {account.accountId}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={classes.detail}>\r\n              <Typography>아이디는 변경할수 없습니다.</Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === 'panel2'}\r\n            onChange={handleChange('panel2')}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel2bh-content\"\r\n              id=\"panel2bh-header\"\r\n            >\r\n              <Typography className={classes.heading}>비밀번호 변경</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={classes.detail}>\r\n              <TextField\r\n                label=\"현재 비밀번호\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                value={form.currentPw}\r\n                name=\"currentPw\"\r\n                onChange={handleChangeForm}\r\n              />\r\n              <TextField\r\n                label=\"새로운 비밀번호\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                value={form.newPw}\r\n                name=\"newPw\"\r\n                onChange={handleChangeForm}\r\n              />\r\n              <TextField\r\n                label=\"새로운 비밀번호 재입력\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                value={form.reNewPw}\r\n                name=\"reNewPw\"\r\n                onChange={handleChangeForm}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(e) => onClickUpdate(e, 'password')}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === 'panel3'}\r\n            onChange={handleChange('panel3')}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel3bh-content\"\r\n              id=\"panel3bh-header\"\r\n            >\r\n              <Typography className={classes.heading}>성명</Typography>\r\n              <Typography className={classes.secondaryHeading}>\r\n                {account.name}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={classes.detail}>\r\n              <TextField\r\n                label=\"개명할 이름\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                value={form.name}\r\n                name=\"name\"\r\n                onChange={handleChangeForm}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(e) => onClickUpdate(e, 'name')}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === 'panel4'}\r\n            onChange={handleChange('panel4')}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel4bh-content\"\r\n              id=\"panel4bh-header\"\r\n            >\r\n              <Typography className={classes.heading}>지역</Typography>\r\n              <Typography className={classes.secondaryHeading}>\r\n                {account.location}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={classes.detail}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">지역</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={form.local}\r\n                  name=\"local\"\r\n                  onChange={handleChangeForm}\r\n                >\r\n                  {form.responseData.map((data) => (\r\n                    <MenuItem key={data} value={data}>\r\n                      {data}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={(e) => onClickUpdate(e, 'local')}\r\n              >\r\n                수정하기\r\n              </Button>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            expanded={expanded === 'panel5'}\r\n            onChange={handleChange('panel5')}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel5bh-content\"\r\n              id=\"panel5bh-header\"\r\n            >\r\n              <Typography className={clsx(classes.heading, classes.withdrawal)}>\r\n                탈퇴하기\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={classes.detail}>\r\n              <TextField\r\n                label=\"현재 비밀번호\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                value={form.withDrawalPw}\r\n                name=\"withDrawalPw\"\r\n                onChange={handleChangeForm}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                onClick={deleteUser}\r\n              >\r\n                탈퇴하기\r\n              </Button>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      )}\r\n    </MyInfoComponent>\r\n  );\r\n};\r\n\r\nexport default withRouter(MyInfo);\r\n","D:\\포트폴리오\\front-end\\src\\components\\common\\StyledCard.jsx",["198","199"],"D:\\포트폴리오\\front-end\\src\\components\\main\\CommentList.jsx",["200","201"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport Loading from '../common/Loading';\r\nconst Reply = styled.div`\r\n  border: 1px solid gray;\r\n  padding: 15px 15px 5px 15px;\r\n  margin-bottom: 5px;\r\n  border-radius: 15px;\r\n  background-color: #eee;\r\n  label {\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    /* border: 1px solid red; */\r\n    margin-right: 20px;\r\n  }\r\n  i {\r\n    /* border: 1px solid red; */\r\n  }\r\n  p {\r\n    /* border: 1px solid red; */\r\n  }\r\n`;\r\nconst PageCenter = styled.div`\r\n  text-align: center;\r\n`;\r\nconst CommentList = ({ boardId, section }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [form, setForm] = useState([]);\r\n  const [pageable, setPageable] = useState(0);\r\n  const onChangePage = (e, value) => {\r\n    e.preventDefault();\r\n    setPage(value - 1);\r\n  };\r\n  //   useEffect(() => {\r\n  //     console.log('처음 useEffect()');\r\n  //     console.log(page);\r\n  //   }, []);\r\n  useEffect(() => {\r\n    const fetchComment = async (token) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:8080/api/${section}/${boardId}/comment?page=${page}&size=10`,\r\n          {\r\n            headers: {\r\n              'Content-type': 'application/json; charset=UTF-8',\r\n              Authorization: `Bearer ${token.replace(/\\\"/gi, '')}`,\r\n            },\r\n          },\r\n        );\r\n        setForm(response.data.content);\r\n        console.log(`useEffect form`);\r\n        console.log(form);\r\n        setPageable(response.data.totalPages);\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    try {\r\n      const token = localStorage.getItem('jwttoken');\r\n      console.log(`token ${token}`);\r\n      fetchComment(token);\r\n    } catch (e) {\r\n      console.log('2');\r\n\r\n      alert('내용에 문제가 있습니다. 다시 시도 해주세요');\r\n      //history.push('/');\r\n    }\r\n  }, [page]);\r\n\r\n  const CommentListComponent = styled.div`\r\n    width: 100%;\r\n  `;\r\n  return (\r\n    <CommentListComponent>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          {form &&\r\n            form.map((data, index) => (\r\n              <Reply>\r\n                <label>{data.writer}</label>\r\n                <i>{data.createComment}</i>\r\n                <p>{data.comment}</p>\r\n              </Reply>\r\n            ))}\r\n          <PageCenter>\r\n            <Pagination\r\n              style={{\r\n                marginTop: 20,\r\n                display: 'inline-block',\r\n              }}\r\n              size=\"large\"\r\n              count={pageable}\r\n              page={page + 1}\r\n              onChange={onChangePage}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              boundaryCount={10}\r\n            />\r\n          </PageCenter>\r\n        </div>\r\n      )}\r\n    </CommentListComponent>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","D:\\포트폴리오\\front-end\\src\\components\\main\\BoardView.jsx",[],"D:\\포트폴리오\\front-end\\src\\components\\common\\Kind.jsx",[],"D:\\포트폴리오\\front-end\\src\\App.js",[],"D:\\포트폴리오\\front-end\\src\\containers\\BoardIntroContainer.jsx",[],"D:\\포트폴리오\\front-end\\src\\components\\section\\Header.jsx",["202","203"],"D:\\포트폴리오\\front-end\\src\\components\\main\\MyTodo.jsx",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"D:\\포트폴리오\\front-end\\src\\components\\main\\CreateBoard.jsx",["223","224","225","226"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TextField, Chip, makeStyles, Button } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { types } from '../../data/skillTypes';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  btn: {\r\n    display: 'block',\r\n    textAlign: 'center',\r\n    '& .MuiButtonBase-root': {\r\n      margin: 20,\r\n    },\r\n  },\r\n}));\r\nconst Form = styled.form`\r\n  padding: 20px;\r\n  border: 1px solid grey;\r\n  border-radius: 20px;\r\n  height: 80%;\r\n  width: 70%;\r\n  box-shadow: 5px 5px 10px rgb(0, 0, 0, 0.3);\r\n`;\r\nconst CreateBoardComponent = styled.div`\r\n  flex: 4;\r\n  height: 800px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #fff;\r\n`;\r\nconst CreateBoard = ({ location, history, type }) => {\r\n  const classes = useStyles();\r\n  const fixedOptions = location.pathname.split('/')[2];\r\n  const [tag, setTag] = React.useState([]);\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    contents: '',\r\n    applicant: 0,\r\n    programmingType: null,\r\n  });\r\n  useEffect(() => {\r\n    console.log(`fix : ${fixedOptions}`);\r\n  }, []);\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    console.log(`value : ${value} name : ${name}`);\r\n    if (name === 'applicant' && value < 0) {\r\n      setForm({\r\n        ...form,\r\n        applicant: 0,\r\n        programmingType: tag,\r\n      });\r\n    } else {\r\n      setForm({\r\n        ...form,\r\n        [name]: value,\r\n        programmingType: tag,\r\n      });\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // setForm({\r\n    //   ...form,\r\n    //   programmingType: tag,\r\n    // });\r\n    const { title, contents, programmingType } = form;\r\n    if (\r\n      !title ||\r\n      !contents ||\r\n      !(programmingType.length > 0 && programmingType.length < 3)\r\n    ) {\r\n      alert('빈 값을 채워 주세요');\r\n      return;\r\n    }\r\n    console.log(programmingType);\r\n    console.log('요청');\r\n    console.log(form);\r\n    const response = (token) =>\r\n      axios.post(\r\n        `http://localhost:8080/api/${type}?section=${fixedOptions}`,\r\n        form,\r\n        {\r\n          headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n            Authorization: `Bearer ${token.replace(/\\\"/gi, '')}`,\r\n          },\r\n        },\r\n      );\r\n    try {\r\n      const token = localStorage.getItem('jwttoken');\r\n\r\n      await response(token)\r\n        .then((res) => {\r\n          if (res.status === 201) {\r\n            alert('게시글 작성에 완료되었습니다.');\r\n            history.push(`/${type}/board/${res.data}`);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          alert('작성 중 에러가 발생했습니다 다시 시도해 주세요');\r\n          window.location.reload();\r\n        });\r\n    } catch (e) {\r\n      alert('로그인에 문제가 있습니다. 다시 로그인해 주세요.');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setForm({\r\n      ...form,\r\n      programmingType: tag,\r\n    });\r\n  }, [tag]);\r\n  return (\r\n    <CreateBoardComponent>\r\n      <Form className={classes.root}>\r\n        <h1>게시 글 작성 ({category[fixedOptions].kor})</h1>\r\n\r\n        <TextField\r\n          label=\"제목\"\r\n          fullWidth\r\n          onChange={onChange}\r\n          name=\"title\"\r\n          value={form.title}\r\n        />\r\n        {type === 'study' && (\r\n          <TextField\r\n            label=\"모집 인원\"\r\n            type=\"number\"\r\n            min=\"0\"\r\n            onChange={onChange}\r\n            name=\"applicant\"\r\n            value={form.applicant}\r\n          />\r\n        )}\r\n\r\n        <Autocomplete\r\n          fullWidth\r\n          multiple\r\n          id=\"fixed-tags-demo\"\r\n          value={tag}\r\n          onChange={(event, newValue) => {\r\n            if (newValue.length > 2) {\r\n              const [trash, ...val] = newValue;\r\n              return setTag([...val]);\r\n            } else {\r\n              setTag([\r\n                ...newValue.filter((option) => {\r\n                  return fixedOptions.indexOf(option) === -1;\r\n                }),\r\n              ]);\r\n            }\r\n          }}\r\n          options={types}\r\n          getOptionLabel={(option) => {\r\n            return option.kor;\r\n          }}\r\n          renderTags={(tagValue, getTagProps) =>\r\n            tagValue.map((option, index) => (\r\n              <Chip\r\n                label={option.title}\r\n                {...getTagProps({ index })}\r\n                disabled={fixedOptions.indexOf(option) !== -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"유형\"\r\n              variant=\"outlined\"\r\n              helperText=\"하위 유형 1~2개를 선택하세요\"\r\n            />\r\n          )}\r\n        />\r\n        <TextField\r\n          label=\"내용\"\r\n          fullWidth\r\n          rows={8}\r\n          multiline\r\n          onChange={onChange}\r\n          name=\"contents\"\r\n          value={form.contents}\r\n        />\r\n        <div className={classes.btn}>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={onSubmit}>\r\n            등록 하기\r\n          </Button>\r\n          <Button variant=\"outlined\">뒤로 가기</Button>\r\n        </div>\r\n      </Form>\r\n    </CreateBoardComponent>\r\n  );\r\n};\r\nconst category = {\r\n  db: {\r\n    title: 'db',\r\n    kor: '데이터 베이스',\r\n  },\r\n  mobile: {\r\n    title: 'mobile',\r\n    kor: '모바일',\r\n  },\r\n  web: {\r\n    title: 'web',\r\n    kor: '웹',\r\n  },\r\n  language: {\r\n    title: 'language',\r\n    kor: '프로그래밍 언어',\r\n  },\r\n};\r\n\r\nexport default withRouter(CreateBoard);\r\n","D:\\포트폴리오\\front-end\\src\\modules\\index.js",[],"D:\\포트폴리오\\front-end\\src\\components\\main\\SignUp.jsx",["227","228","229","230"],"D:\\포트폴리오\\front-end\\src\\components\\main\\LocalList.jsx",["231"],"import React, { useEffect, useState } from 'react';\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\nconst LocalList = ({ local, onClickLocal }) => {\r\n  const [localList, setLocalList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/locallist');\r\n        setLocalList(response.data.local);\r\n        console.log(response);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(`로컬리즈트 ${local}`);\r\n    console.log(localList);\r\n  }, [localList]);\r\n  return (\r\n    <div>\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        aria-label=\"contained primary button group\"\r\n      >\r\n        {localList.map((data) => {\r\n          return local === data.eng ? (\r\n            <Button key={data.eng} value={data.eng} disabled>\r\n              {data.kor}\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              key={data.eng}\r\n              value={data.eng}\r\n              onClick={() => onClickLocal(data.eng)}\r\n            >\r\n              {data.kor}\r\n            </Button>\r\n          );\r\n        })}\r\n      </ButtonGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocalList;\r\n","D:\\포트폴리오\\front-end\\src\\components\\common\\StyledModal.jsx",["232","233","234","235","236"],{"ruleId":"237","severity":1,"message":"238","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":102,"column":53,"nodeType":"247","messageId":"248","endLine":102,"endColumn":54,"suggestions":"249"},{"ruleId":"245","severity":1,"message":"246","line":134,"column":53,"nodeType":"247","messageId":"248","endLine":134,"endColumn":54,"suggestions":"250"},{"ruleId":"245","severity":1,"message":"246","line":167,"column":55,"nodeType":"247","messageId":"248","endLine":167,"endColumn":56,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":191,"column":6,"nodeType":"254","endLine":191,"endColumn":8,"suggestions":"255"},{"ruleId":"252","severity":1,"message":"256","line":195,"column":6,"nodeType":"254","endLine":195,"endColumn":14,"suggestions":"257"},{"ruleId":"252","severity":1,"message":"258","line":125,"column":6,"nodeType":"254","endLine":125,"endColumn":34,"suggestions":"259"},{"ruleId":"241","replacedBy":"260"},{"ruleId":"243","replacedBy":"261"},{"ruleId":"241","replacedBy":"262"},{"ruleId":"243","replacedBy":"263"},{"ruleId":"241","replacedBy":"264"},{"ruleId":"243","replacedBy":"265"},{"ruleId":"252","severity":1,"message":"266","line":47,"column":6,"nodeType":"239","endLine":47,"endColumn":10},{"ruleId":"252","severity":1,"message":"267","line":47,"column":6,"nodeType":"239","endLine":47,"endColumn":10,"suggestions":"268"},{"ruleId":"241","replacedBy":"269"},{"ruleId":"243","replacedBy":"270"},{"ruleId":"241","replacedBy":"271"},{"ruleId":"243","replacedBy":"272"},{"ruleId":"237","severity":1,"message":"273","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":16},{"ruleId":"237","severity":1,"message":"274","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":14},{"ruleId":"252","severity":1,"message":"275","line":107,"column":6,"nodeType":"254","endLine":107,"endColumn":24,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":144,"column":11,"nodeType":"279","endLine":144,"endColumn":14},{"ruleId":"237","severity":1,"message":"280","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":15},{"ruleId":"252","severity":1,"message":"281","line":53,"column":6,"nodeType":"254","endLine":53,"endColumn":8,"suggestions":"282"},{"ruleId":"237","severity":1,"message":"283","line":3,"column":22,"nodeType":"239","messageId":"240","endLine":3,"endColumn":26},{"ruleId":"237","severity":1,"message":"284","line":9,"column":7,"nodeType":"239","messageId":"240","endLine":9,"endColumn":20},{"ruleId":"237","severity":1,"message":"285","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":28},{"ruleId":"286","severity":1,"message":"287","line":30,"column":5,"nodeType":"288","messageId":"289","endLine":30,"endColumn":13},{"ruleId":"290","severity":1,"message":"291","line":95,"column":5,"nodeType":"292","messageId":"293","endLine":118,"endColumn":6},{"ruleId":"245","severity":1,"message":"246","line":126,"column":53,"nodeType":"247","messageId":"248","endLine":126,"endColumn":54,"suggestions":"294"},{"ruleId":"245","severity":1,"message":"246","line":161,"column":51,"nodeType":"247","messageId":"248","endLine":161,"endColumn":52,"suggestions":"295"},{"ruleId":"252","severity":1,"message":"296","line":197,"column":6,"nodeType":"254","endLine":197,"endColumn":16,"suggestions":"297"},{"ruleId":"245","severity":1,"message":"246","line":209,"column":53,"nodeType":"247","messageId":"248","endLine":209,"endColumn":54,"suggestions":"298"},{"ruleId":"252","severity":1,"message":"296","line":233,"column":6,"nodeType":"254","endLine":233,"endColumn":8,"suggestions":"299"},{"ruleId":"237","severity":1,"message":"238","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"300","line":1,"column":28,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"246","line":50,"column":55,"nodeType":"247","messageId":"248","endLine":50,"endColumn":56,"suggestions":"301"},{"ruleId":"252","severity":1,"message":"302","line":73,"column":6,"nodeType":"254","endLine":73,"endColumn":12,"suggestions":"303"},{"ruleId":"237","severity":1,"message":"304","line":186,"column":11,"nodeType":"239","messageId":"240","endLine":186,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":203,"column":11,"nodeType":"279","endLine":203,"endColumn":30},{"ruleId":"237","severity":1,"message":"307","line":2,"column":18,"nodeType":"239","messageId":"240","endLine":2,"endColumn":31},{"ruleId":"237","severity":1,"message":"308","line":11,"column":3,"nodeType":"239","messageId":"240","endLine":11,"endColumn":7},{"ruleId":"237","severity":1,"message":"309","line":12,"column":3,"nodeType":"239","messageId":"240","endLine":12,"endColumn":14},{"ruleId":"237","severity":1,"message":"310","line":13,"column":3,"nodeType":"239","messageId":"240","endLine":13,"endColumn":14},{"ruleId":"237","severity":1,"message":"311","line":14,"column":3,"nodeType":"239","messageId":"240","endLine":14,"endColumn":9},{"ruleId":"237","severity":1,"message":"312","line":15,"column":3,"nodeType":"239","messageId":"240","endLine":15,"endColumn":13},{"ruleId":"237","severity":1,"message":"313","line":16,"column":3,"nodeType":"239","messageId":"240","endLine":16,"endColumn":8},{"ruleId":"237","severity":1,"message":"314","line":17,"column":3,"nodeType":"239","messageId":"240","endLine":17,"endColumn":7},{"ruleId":"237","severity":1,"message":"315","line":18,"column":3,"nodeType":"239","messageId":"240","endLine":18,"endColumn":11},{"ruleId":"237","severity":1,"message":"316","line":19,"column":3,"nodeType":"239","messageId":"240","endLine":19,"endColumn":12},{"ruleId":"237","severity":1,"message":"317","line":21,"column":8,"nodeType":"239","messageId":"240","endLine":21,"endColumn":15},{"ruleId":"237","severity":1,"message":"318","line":22,"column":8,"nodeType":"239","messageId":"240","endLine":22,"endColumn":20},{"ruleId":"237","severity":1,"message":"319","line":24,"column":3,"nodeType":"239","messageId":"240","endLine":24,"endColumn":21},{"ruleId":"237","severity":1,"message":"320","line":25,"column":3,"nodeType":"239","messageId":"240","endLine":25,"endColumn":26},{"ruleId":"237","severity":1,"message":"321","line":106,"column":9,"nodeType":"239","messageId":"240","endLine":106,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":127,"column":55,"nodeType":"247","messageId":"248","endLine":127,"endColumn":56,"suggestions":"322"},{"ruleId":"245","severity":1,"message":"246","line":161,"column":55,"nodeType":"247","messageId":"248","endLine":161,"endColumn":56,"suggestions":"323"},{"ruleId":"252","severity":1,"message":"324","line":185,"column":6,"nodeType":"254","endLine":185,"endColumn":8,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":280,"column":11,"nodeType":"328","endLine":280,"endColumn":34},{"ruleId":"252","severity":1,"message":"329","line":50,"column":6,"nodeType":"254","endLine":50,"endColumn":8,"suggestions":"330"},{"ruleId":"245","severity":1,"message":"246","line":93,"column":53,"nodeType":"247","messageId":"248","endLine":93,"endColumn":54,"suggestions":"331"},{"ruleId":"252","severity":1,"message":"296","line":121,"column":6,"nodeType":"254","endLine":121,"endColumn":11,"suggestions":"332"},{"ruleId":"237","severity":1,"message":"333","line":152,"column":22,"nodeType":"239","messageId":"240","endLine":152,"endColumn":27},{"ruleId":"237","severity":1,"message":"334","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":17},{"ruleId":"237","severity":1,"message":"335","line":3,"column":28,"nodeType":"239","messageId":"240","endLine":3,"endColumn":34},{"ruleId":"252","severity":1,"message":"296","line":232,"column":6,"nodeType":"254","endLine":232,"endColumn":16,"suggestions":"336"},{"ruleId":"326","severity":1,"message":"327","line":297,"column":17,"nodeType":"328","endLine":297,"endColumn":36},{"ruleId":"252","severity":1,"message":"337","line":22,"column":6,"nodeType":"254","endLine":22,"endColumn":17,"suggestions":"338"},{"ruleId":"237","severity":1,"message":"339","line":2,"column":22,"nodeType":"239","messageId":"240","endLine":2,"endColumn":32},{"ruleId":"252","severity":1,"message":"266","line":68,"column":6,"nodeType":"239","endLine":68,"endColumn":18},{"ruleId":"252","severity":1,"message":"340","line":68,"column":6,"nodeType":"239","endLine":68,"endColumn":18,"suggestions":"341"},{"ruleId":"245","severity":1,"message":"246","line":84,"column":51,"nodeType":"247","messageId":"248","endLine":84,"endColumn":52,"suggestions":"342"},{"ruleId":"245","severity":1,"message":"246","line":118,"column":51,"nodeType":"247","messageId":"248","endLine":118,"endColumn":52,"suggestions":"343"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["344"],"no-negated-in-lhs",["345"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["346","347"],["348","349"],["350","351"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.pathname' and 'section'. Either include them or remove the dependency array.","ArrayExpression",["352"],"React Hook useEffect has a missing dependency: 'section'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["354"],["344"],["345"],["344"],["345"],["344"],["345"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["355"],["344"],["345"],["344"],["345"],"'producer' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["356"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'rank.totalRank'. Either include it or remove the dependency array.",["357"],"'call' is defined but never used.","'TEMP_SET_USER' is assigned a value but never used.","'useCallback' is defined but never used.","no-dupe-keys","Duplicate key 'fontSize'.","ObjectExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["358","359"],["360","361"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.",["362"],["363","364"],["365"],"'useState' is defined but never used.",["366","367"],"React Hook useEffect has missing dependencies: 'boardId', 'form', and 'section'. Either include them or remove the dependency array.",["368"],"'accountId' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ThemeConsumer' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'Modal' is defined but never used.","'Fade' is defined but never used.","'Backdrop' is defined but never used.","'TextField' is defined but never used.","'AddIcon' is defined but never used.","'DateFnsUtils' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'classes' is assigned a value but never used.",["369","370"],["371","372"],"React Hook useEffect has missing dependencies: 'page' and 'value'. Either include them or remove the dependency array.",["373"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'fixedOptions'. Either include it or remove the dependency array.",["374"],["375","376"],["377"],"'trash' is assigned a value but never used.","'message' is defined but never used.","'useRef' is defined but never used.",["378"],"React Hook useEffect has a missing dependency: 'local'. Either include it or remove the dependency array.",["379"],"'withStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'selectedDate'. Either include them or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.",["380"],["381","382"],["383","384"],"no-global-assign","no-unsafe-negation",{"messageId":"385","fix":"386","desc":"387"},{"messageId":"388","fix":"389","desc":"390"},{"messageId":"385","fix":"391","desc":"387"},{"messageId":"388","fix":"392","desc":"390"},{"messageId":"385","fix":"393","desc":"387"},{"messageId":"388","fix":"394","desc":"390"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"messageId":"385","fix":"407","desc":"387"},{"messageId":"388","fix":"408","desc":"390"},{"messageId":"385","fix":"409","desc":"387"},{"messageId":"388","fix":"410","desc":"390"},{"desc":"411","fix":"412"},{"messageId":"385","fix":"413","desc":"387"},{"messageId":"388","fix":"414","desc":"390"},{"desc":"401","fix":"415"},{"messageId":"385","fix":"416","desc":"387"},{"messageId":"388","fix":"417","desc":"390"},{"desc":"418","fix":"419"},{"messageId":"385","fix":"420","desc":"387"},{"messageId":"388","fix":"421","desc":"390"},{"messageId":"385","fix":"422","desc":"387"},{"messageId":"388","fix":"423","desc":"390"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"messageId":"385","fix":"428","desc":"387"},{"messageId":"388","fix":"429","desc":"390"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"messageId":"385","fix":"438","desc":"387"},{"messageId":"388","fix":"439","desc":"390"},{"messageId":"385","fix":"440","desc":"387"},{"messageId":"388","fix":"441","desc":"390"},"removeEscape",{"range":"442","text":"443"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"444","text":"445"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"446","text":"443"},{"range":"447","text":"445"},{"range":"448","text":"443"},{"range":"449","text":"445"},"Update the dependencies array to be: [location.pathname, section]",{"range":"450","text":"451"},"Update the dependencies array to be: [detail, section]",{"range":"452","text":"453"},"Update the dependencies array to be: [page, type, section, local, history]",{"range":"454","text":"455"},"Update the dependencies array to be: [form]",{"range":"456","text":"457"},"Update the dependencies array to be: [token, authError, dispatch, history]",{"range":"458","text":"459"},"Update the dependencies array to be: [rank.totalRank]",{"range":"460","text":"461"},{"range":"462","text":"443"},{"range":"463","text":"445"},{"range":"464","text":"443"},{"range":"465","text":"445"},"Update the dependencies array to be: [expanded, form]",{"range":"466","text":"467"},{"range":"468","text":"443"},{"range":"469","text":"445"},{"range":"470","text":"457"},{"range":"471","text":"443"},{"range":"472","text":"445"},"Update the dependencies array to be: [boardId, form, page, section]",{"range":"473","text":"474"},{"range":"475","text":"443"},{"range":"476","text":"445"},{"range":"477","text":"443"},{"range":"478","text":"445"},"Update the dependencies array to be: [page, value]",{"range":"479","text":"480"},"Update the dependencies array to be: [fixedOptions]",{"range":"481","text":"482"},{"range":"483","text":"443"},{"range":"484","text":"445"},"Update the dependencies array to be: [form, tag]",{"range":"485","text":"486"},"Update the dependencies array to be: [form, form.tel]",{"range":"487","text":"488"},"Update the dependencies array to be: [local, localList]",{"range":"489","text":"490"},"Update the dependencies array to be: [form, selectedDate]",{"range":"491","text":"492"},{"range":"493","text":"443"},{"range":"494","text":"445"},{"range":"495","text":"443"},{"range":"496","text":"445"},[2495,2496],"",[2495,2495],"\\",[3411,3412],[3411,3411],[4390,4391],[4390,4390],[4967,4969],"[location.pathname, section]",[5062,5070],"[detail, section]",[3117,3145],"[page, type, section, local, history]",[1182,1186],"[form]",[2426,2444],"[token, authError, dispatch, history]",[1172,1174],"[rank.totalRank]",[3284,3285],[3284,3284],[4253,4254],[4253,4253],[5039,5049],"[expanded, form]",[5497,5498],[5497,5497],[6133,6135],[1479,1480],[1479,1479],[2036,2042],"[boardId, form, page, section]",[3260,3261],[3260,3260],[4231,4232],[4231,4231],[4803,4805],"[page, value]",[1325,1327],"[fixedOptions]",[2466,2467],[2466,2466],[3121,3126],"[form, tag]",[5111,5121],"[form, form.tel]",[650,661],"[local, localList]",[1635,1647],"[form, selectedDate]",[2097,2098],[2097,2097],[3035,3036],[3035,3035]]